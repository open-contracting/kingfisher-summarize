Column Name,Data Type,Description
id,bigint,"Unique id representing a release, compiled_release or record"
release_type,text,"Either release, record, compiled_release or embedded_release. With ""release"", individual releases are read through the release table. With ""record"", a compiled release is read from a record's compiledRelease field through the record table. With ""compiled_release"", a compiled release is read through the compiled_release table, which is calculated by Kingfisher Process (for example, by merging a collection of releases). With ""embedded_releases"", individual releases are read from a record's releases array through the record table."
table_id,integer,"`id` from either release, compiled_release or release tables in Kingfisher Process where this row was generated from"
collection_id,integer,id from Kingfisher collection table
ocid,text,ocid from the data
release_id,text,Release id from the data. Relevant for releases and not for compiled_releases or records
data_id,integer,"id for the ""data"" table in Kingfisher that holds the original JSON data."
package_data_id,integer,`id` from package_data table
package_version,text,OCDS version gathered from the `version` field in package
release_date,timestamp,`date` field from release
release_tag,jsonb,JSONB list of `tags` field from release
release_language,text,`language` field from release object
role_counts,jsonb,JSONB object with the keys as unique `roles` and the values as count of the appearances of those `roles`
total_roles,numeric,Total amount of roles specified across all parties
total_parties,bigint,Count of parties
total_planning_documents,bigint,Count of planning documents
planning_documenttype_counts,jsonb,Count of planning document types
total_tender_documents,bigint,Count of tender documents
tender_documenttype_counts,jsonb,Count of tender document types
award_count,bigint,Count of awards
first_award_date,timestamp,Earliest `date` in all award objects
last_award_date,timestamp,Latest `date` in all award objects
total_award_documents,numeric,The sum of `documents_count` for each `award` in this release
total_award_items,numeric,Count of all items in all awards
total_award_suppliers,bigint,The sum of `suppliers_count` for each `award` in this release
award_amount,numeric,Total of all value/amount across awards. NOTE: This ignores the fact that amounts could be of different currencies and sums them anyway
unique_award_suppliers,bigint,"A count of distinct suppliers for all awards for this release, based on the `unique_identifier_attempt` field"
award_documenttype_counts,jsonb,JSONB object with the keys as unique awards/documents/documentType and the values as count of the appearances of those documentTypes
contract_count,bigint,Count of contracts
total_contract_link_to_awards,bigint,Count of all contracts that have link to awards through awardID field
contract_amount,numeric,Total of all value/amount across contracts. NOTE: This ignores the fact that amounts could be of different currencies and sums them anyway
first_contract_datesigned,timestamp,First `dateSigned` across all contracts
last_contract_datesigned,timestamp,Last `dateSigned` across all contracts
total_contract_documents,numeric,Count of contracts/documents
total_contract_milestones,numeric,Count of contracts/milestones
total_contract_items,numeric,Count of contracts/items
total_contract_implementation_documents,numeric,Count of contracts/implementation/documents
total_contract_implementation_milestones,numeric,Count of contracts/implementation/milestones
contract_documenttype_counts,jsonb,JSONB object with the keys as unique contracts/documents/documentType and the values as count of the appearances of those documentTypes
contract_implemetation_documenttype_counts,jsonb,JSONB object with the keys as unique contracts/implementation/documents/documentType and the values as count of the appearances of those documentTypes
contract_milestonetype_counts,jsonb,JSONB object with the keys as unique contracts/milestone/milestoneType and the values as count of the appearances of those milestoneTypes
contract_implementation_milestonetype_counts,jsonb,JSONB object with the keys as unique contracts/implementation/documents/milestoneType and the values as count of the appearances of those milestoneTypes
total_documenttype_counts,jsonb,JSONB object with the keys as unique documentTypes from all documents in the release and the values as count of the appearances of those documentTypes
total_documents,numeric,Count of documents in the release
milestonetype_counts,jsonb,JSONB object with the keys as unique milestoneTypes from all milestones in the release and the values as count of the appearances of those milestoneTypes
total_milestones,numeric,Count of milestones in the release
source_id,text,`source_id` from Kingfisher Process collection table
data_version,timestamp,`data_version` from Kingfisher Process collection table
store_start_at,timestamp,`store_start_at` from Kingfisher Process collection table
store_end_at,timestamp,`store_end_at` from Kingfisher Process collection table
sample,boolean,`sample` from Kingfisher Process collection table
transform_type,text,`transform_type` from Kingfisher Process collection table
transform_from_collection_id,integer,`transform_from_collection_id` from Kingfisher Process collection table
deleted_at,timestamp,`deleted_at` from Kingfisher Process collection table
release,jsonb,`data` from Kingfisher Process data table. This is the whole release in JSONB
package_data,jsonb,`data` from Kingfisher Process package_data table. This is the package data in either a release or record package. For compiled releases generated by Kingfisher Process this is NULL
release_check,jsonb,JSONB of Data Review Tool output which includes validation errors and additional field information
release_check11,jsonb,JSONB of Data Review Tool output run against 1.1 version of OCDS even if the data is from 1.0
record_check,jsonb,JSONB of Data Review Tool output which includes validation errors and additional field information
record_check11,jsonb,JSONB of Data Review Tool output run against 1.1 version of OCDS even if the data is from 1.0
field_list,ARRAY,Array of paths for the release object. Paths excluding index numbers for arrays.This field will only appear if --field-lists option is specified
